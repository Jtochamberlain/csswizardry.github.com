/* ==========================================================================
   #ASPECT-RATIO
   ========================================================================== */

/**
 * A general-purpose component for forcing fluid images to maintain an aspect
 * ratio. This is definitely a hack, but it works. It stops layout shift while
 * fluid images load.
 *
 * 1. Only attempt to use this component if the browser supports the modern
 *    features needed to make it work.
 * 2. Default to 16:9 ratios. We override this on a per-implementation basis by
 *    passing in new custom properties as inline styles.
 * 3. Reserve a fluid/aspect-ratio height using the aspect-ratio hack.
 * 4. If I want to use an optional embedded Base64 placeholder image (defined as
 *    an inline style), ensure it covers the entire reserved area.
 */

@supports (padding-top: calc(var(--height) / var(--width) * 100%)) { /* [1] */

  .c-aspect-ratio {
    --width: 16; /* [2] */
    --height: 9; /* [2] */
    position: relative;
    padding-top: calc(var(--height) / var(--width) * 100%); /* [3] */
    background-size: cover; /* [4] */
    background-repeat: no-repeat; /* [4] */

    /**
     * We need to sit the image absolutely and stretched over the area that the
     * parent `.c-aspect-ratio` component has reserved.
     */

    > img {
      position: absolute;
      top: 0;
      width: 100%;
    }

  }

}
